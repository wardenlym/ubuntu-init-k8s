apiVersion: kubeadm.k8s.io/v1beta2 # https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2
kind: InitConfiguration
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: abcdef.0123456789abcdef
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
localAPIEndpoint:
  advertiseAddress: 172.29.50.52                          # 本节点宣告ip地址
  bindPort: 6443
nodeRegistration:
  criSocket: /var/run/dockershim.sock
  name: node-50
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
clusterName: kubernetes
certificatesDir: /etc/kubernetes/pki
imageRepository: registry.aliyuncs.com/google_containers  # 修改国内镜像源
controlPlaneEndpoint: "172.29.50.51:6443"                 # apiserver负载均衡的域名或者vip和端口
kubernetesVersion: v1.19.7                                # 选择k8s版本
networking:  #https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2#Networking
  dnsDomain: cluster.local
  serviceSubnet: 10.96.0.0/12
  podSubnet: "10.44.0.0/16"                               # 修改子网地址
apiServer: # https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2#APIServer
  timeoutForControlPlane: 4m0s
  extraArgs:
    authorization-mode: "Node,RBAC"
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeClaimResize,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,Priority,PodPreset"
    runtime-config: api/all=true
    storage-backend: etcd3
    etcd-servers: https://172.29.50.52:2379,https://172.29.50.53:2379,https://172.29.50.53:2379
    # 审计日志相关配置
    # audit-log-maxage: "20"
    # audit-log-maxbackup: "10"
    # audit-log-maxsize: "100"
    # audit-log-path: "/var/log/kube-audit/audit.log"
    # audit-policy-file: "/etc/kubernetes/audit-policy.yaml"
    # authorization-mode: "Node,RBAC"
    # event-ttl: "720h"
    # 如果有需要可以覆盖的参数
    # service-node-port-range: "30000-50000"
    # service-cluster-ip-range: "10.96.0.0/12"

controllerManager: # https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2#ControlPlaneComponent
  extraArgs:
    bind-address: "0.0.0.0"
    experimental-cluster-signing-duration: 87600h        # 证书过期时间修改为10年
  extraVolumes:
  - hostPath: /etc/localtime
    mountPath: /etc/localtime
    name: localtime
    readOnly: true
scheduler:
  extraArgs:
    bind-address: "0.0.0.0"
  extraVolumes:
  - hostPath: /etc/localtime
    mountPath: /etc/localtime
    name: localtime
    readOnly: true
dns:
  type: CoreDNS
etcd:
  local:
    imageRepository: quay.io/coreos #如果不单独指定，默认会去找aliyun的imageRepository
    imageTag: v3.4.13
    dataDir: /var/lib/etcd
    extraArgs: # 暂时没有extraVolumes
      auto-compaction-retention: "1h"
      max-request-bytes: "33554432"
      quota-backend-bytes: "8589934592"
      enable-v2: "false"                                  # disable etcd v2 api
  # external: //外部etcd的时候这样配置 https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2#Etcd
    # endpoints:
    # - "https://172.19.0.2:2379"
    # - "https://172.19.0.3:2379"
    # - "https://172.19.0.4:2379"
    # caFile: "/etc/kubernetes/pki/etcd/ca.crt"
    # certFile: "/etc/kubernetes/pki/etcd/etcd.crt"
    # keyFile: "/etc/kubernetes/pki/etcd/etcd.key"
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration # https://godoc.org/k8s.io/kube-proxy/config/v1alpha1#KubeProxyConfiguration
mode: ipvs
featureGates:
  SupportIPVSProxyMode: true                              # 开启ipvs模式
metricsBindAddress: "0.0.0.0:10249"                       # 开启默认监听metrics地址
ipvs:
  excludeCIDRs: null
  minSyncPeriod: 0s
  scheduler: "rr"                                         # 调度算法
  syncPeriod: 15s
iptables:
  masqueradeAll: true
  masqueradeBit: 14
  minSyncPeriod: 0s
  syncPeriod: 30s
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration # https://godoc.org/k8s.io/kubelet/config/v1beta1#KubeletConfiguration
cgroupDriver: systemd
failSwapOn: true # 如果开启swap则设置为false
resolvConf: /run/systemd/resolve/resolv.conf
